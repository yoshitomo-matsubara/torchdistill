datasets:
  ilsvrc2012:
    name: &dataset_name 'ilsvrc2012'
    type: 'ImageFolder'
    root: &root_dir !join ['./resource/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &imagenet_train !join [*dataset_name, '/train']
        params:
          root: !join [*root_dir, '/train']
          transform_params:
            - type: 'RandomResizedCrop'
              params:
                size: &input_size [224, 224]
            - type: 'RandomHorizontalFlip'
              params:
                p: 0.5
            - &totensor
              type: 'ToTensor'
              params:
            - &normalize
              type: 'Normalize'
              params:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &imagenet_val !join [*dataset_name, '/val']
        params:
          root: !join [*root_dir, '/val']
          transform_params:
            - type: 'Resize'
              params:
                size: 256
            - type: 'CenterCrop'
              params:
                size: *input_size
            - *totensor
            - *normalize

models:
  teacher_model:
    name: &teacher_model_name 'resnet50'
    params:
      num_classes: 1000
      pretrained: True
    experiment: &teacher_experiment !join [*dataset_name, '-', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/ilsvrc2012/teacher/', *teacher_experiment, '.pt']
  student_model:
    name: &student_model_name 'resnet18'
    params:
      num_classes: 1000
      pretrained: True
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_name, '_from_', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/ilsvrc2012/multi_stage/dab/', *student_experiment, '.pt']

train:
  log_freq: 1000
  stage1:
    num_epochs: 1
    train_data_loader:
      dataset_id: *imagenet_train
      random_sample: True
      batch_size: 32
      num_workers: 16
      cache_output:
    val_data_loader:
      dataset_id: *imagenet_val
      random_sample: False
      batch_size: 32
      num_workers: 16
    teacher:
      sequential: ['conv1', 'bn1', 'relu', 'maxpool', 'layer1', 'layer2', 'layer3', 'layer4']
      forward_hook:
        input: []
        output: ['layer1', 'layer2', 'layer3', 'layer4']
      wrapper: 'DistributedDataParallel'
      requires_grad: False
    student:
      adaptations:
      sequential: []
      special:
        type: 'Connector4DAB'
        params:
          connectors:
            connector1:
              io: 'output'
              path: 'student_model.layer1'
              conv_params:
                in_channels: 64
                out_channels: &och1 256
                kernel_size: 1
                stride: 1
                padding: 0
                bias: False
              bn_params:
                num_features: *och1
            connector2:
              io: 'output'
              path: 'student_model.layer2'
              conv_params:
                in_channels: 128
                out_channels: &och2 512
                kernel_size: 1
                stride: 1
                padding: 0
                bias: False
              bn_params:
                num_features: *och2
            connector3:
              io: 'output'
              path: 'student_model.layer3'
              conv_params:
                in_channels: 256
                out_channels: &och3 1024
                kernel_size: 1
                stride: 1
                padding: 0
                bias: False
              bn_params:
                num_features: *och3
            connector4:
              io: 'output'
              path: 'student_model.layer4'
              conv_params:
                in_channels: 512
                out_channels: &och4 2048
                kernel_size: 1
                stride: 1
                padding: 0
                bias: False
              bn_params:
                num_features: *och4
      frozen_modules: []
      forward_hook:
        input: []
        output: ['student_model.layer1', 'student_model.layer2', 'student_model.layer3', 'student_model.layer4', 'connector_dict.connector1', 'connector_dict.connector2', 'connector_dict.connector3', 'connector_dict.connector4']
      wrapper:
      requires_grad: True
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'SGD'
      params:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0001
    criterion:
      type: 'GeneralizedCustomLoss'
      org_term:
        factor: 0.0
      sub_terms:
        dab:
          criterion:
            type: 'AltActTransferLoss'
            params:
              feature_pairs:
                pair1:
                  teacher:
                    io: 'output'
                    path: 'layer1'
                  student:
                    io: 'output'
                    path: 'connector_dict.connector1'
                  factor: 1
                pair2:
                  teacher:
                    io: 'output'
                    path: 'layer2'
                  student:
                    io: 'output'
                    path: 'connector_dict.connector2'
                  factor: 1
                pair3:
                  teacher:
                    io: 'output'
                    path: 'layer3'
                  student:
                    io: 'output'
                    path: 'connector_dict.connector3'
                  factor: 1
                pair4:
                  teacher:
                    io: 'output'
                    path: 'layer4'
                  student:
                    io: 'output'
                    path: 'connector_dict.connector4'
                  factor: 1
              margin: 1.0
              reduction: 'mean'
          factor: 1.0
  stage2:
    num_epochs: 19
    teacher:
      sequential: []
      wrapper: 'DistributedDataParallel'
      requires_grad: False
    student:
      adaptations:
      sequential: []
      wrapper: 'DistributedDataParallel'
      requires_grad: True
      frozen_modules: []
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'SGD'
      params:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      type: 'MultiStepLR'
      params:
        milestones: [5, 10]
        gamma: 0.1
    criterion:
      type: 'GeneralizedCustomLoss'
      org_term:
        criterion:
          type: 'KDLoss'
          params:
            temperature: 1.0
            alpha: 1.0
            reduction: 'batchmean'
        factor: 1.0
      sub_terms:

test:
  test_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 1
    num_workers: 16
